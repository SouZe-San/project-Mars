/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ARCTIC  WOLVESâ„¢ (https://sketchfab.com/arctic.wolves)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mars-156a95dfec244e07a3ae423f579ffb05
Title: Mars
*/

import * as THREE from "three";
import { useRef ,useEffect} from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
type GLTFResult = GLTF & {
  nodes: {
    Mars_LOD0_MarsLOD1_0: THREE.Mesh;
  };
  materials: {
    MarsLOD1: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
const meshRef = useRef<THREE.Mesh>(null!)
  useFrame((_, delta) => {
                    // meshRef.current.rotation.x += delta
                   meshRef.current.rotation.y += 0.5 * delta
                })

  useEffect(() => {
    console.log(meshRef.current.rotation.y);
    
  }
  ,[])


  const { nodes, materials } = useGLTF("/mars.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[-Math.PI, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh
            ref={meshRef}
              castShadow
              receiveShadow
              geometry={nodes.Mars_LOD0_MarsLOD1_0.geometry}
              material={materials.MarsLOD1}
              position={[0, 0, 0]}
              // [0, -2.5,0]
              // rotation={[-Math.PI / 2, 0, 0]}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/mars.glb");
